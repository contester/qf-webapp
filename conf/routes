GET / controllers.Application.index

GET /clarifications controllers.QandA.index
POST /clarifications controllers.QandA.post

GET /extrainfo/:num controllers.Application.showExtraInfo(num: Int)

GET /sendwithinput controllers.ServerSideEval.index
POST /sendwithinput controllers.ServerSideEval.post
GET /evaldetails/:id controllers.ServerSideEval.details(id: Long)

GET /print controllers.Printing.index
POST /print controllers.Printing.post

+ nocsrf
POST /ackMessage controllers.Application.ackMessage

GET /monitor controllers.Application.monitorDefault
GET /monitor/ controllers.Application.monitorDefault

GET /submit controllers.Application.submit
POST /submit controllers.Application.submitPost
GET /submit/:submitId controllers.Application.showSubmit(submitId: Int)

GET /feed/:contestId/:teamId controllers.Application.feed(contestId: Int, teamId: Int)

GET /login controllers.AuthForms.login
POST /login controllers.AuthForms.authenticate
GET /logout controllers.AuthForms.logout

GET /admin controllers.AdminApplication.index

GET /admin/submits/:contestId controllers.AdminApplication.submits(contestId: Int)
GET /admin/monitor/:contestId controllers.AdminApplication.monitor(contestId: Int)

GET /admin/rejudge/:contestId controllers.AdminApplication.rejudgePage(contestId: Int)
POST /admin/rejudgeRange/:contestId controllers.AdminApplication.rejudgeRange(contestId: Int)

+ nocsrf
POST /admin/rejudgeSubmit/:submitId controllers.AdminApplication.rejudgeSubmit(submitId: Int)

GET /admin/postNewClarification/:contestId controllers.AdminApplication.postNewClarification(contestId: Int)
GET /admin/updateClarification/:clrId controllers.AdminApplication.postUpdateClarification(clrId: Long)
POST /admin/postClarification/:contestId controllers.AdminApplication.postClarification(contestId: Int, clarificationId: Option[Long])

+ nocsrf
POST /admin/toggleClarification/:clrId controllers.AdminApplication.toggleClarification(clrId: Long)

+ nocsrf
POST /admin/deleteClarification/:contestId/:clrId controllers.AdminApplication.deleteClarification(contestId: Int, clrId: Long)
GET /admin/qanda/:contestId controllers.AdminApplication.showQandA(contestId: Int)
GET /admin/tasks/:contestId controllers.AdminApplication.tasks(contestId: Int)
POST /admin/postAnswer/:clrId controllers.AdminApplication.postAnswer(clrId: Long)
GET /admin/postAnswer/:clrId controllers.AdminApplication.postAnswerForm(clrId: Long)

GET /admin/showsubmit/:contestId/:id controllers.AdminApplication.showSubmit(contestId: Int, id: Int)
GET /admin/downloadSubmit/:contestId/:id controllers.AdminApplication.downloadArchiveSubmit(contestId: Int, id: Int)

GET /admin/login controllers.AdminAuthForms.login
POST /admin/login controllers.AdminAuthForms.authenticate
GET /admin/logout controllers.AdminAuthForms.logout
GET /admin/feed/:contestId controllers.AdminApplication.feed(contestId: Int)

GET /admin/:contestID/printJobs controllers.AdminApplication.listPrintJobs(contestID: Int)

GET /admin/:contestId/postNewWaiterForm controllers.AdminApplication.postNewWaiterTaskForm(contestId: Int)
POST /admin/:contestId/postWaiterTask controllers.AdminApplication.postWaiterTask(contestId: Int, id: Option[Int])
+ nocsrf
POST /admin/ackWaiterTask/:id/:room controllers.AdminApplication.ackWaiterTask(id: Long, room: String)
+ nocsrf
POST /admin/unackWaiterTask/:id/:room controllers.AdminApplication.unackWaiterTask(id: Long, room: String)
+ nocsrf
POST /admin/deleteWaiterTask/:id controllers.AdminApplication.deleteWaiterTask(id: Long)

+ nocsrf
POST /admin/reprintPrintJob/:id controllers.AdminApplication.reprintJob(id: Long)

GET /admin/:contestID/editTeam/:teamID controllers.AdminApplication.editTeam(contestID: Int, teamID: Int)

GET /admin/:contestID/editSchool/:schoolID controllers.AdminApplication.editSchool(contestID: Int, schoolID: Int)

GET /admin/:contestID/teams/ controllers.AdminApplication.listTeams(contestID: Int)

GET /admin/:contestID/contests/ controllers.AdminApplication.showContestList(contestID: Int)

+ nocsrf
POST /admin/:contestID/editTeam/:teamID controllers.AdminApplication.postEditTeam(contestID: Int, teamID: Int)

GET /admin/:contestID/contests/:cid controllers.AdminApplication.editContest(contestID: Int, cid: Int)

POST /admin/:contestID/contests/:cid controllers.AdminApplication.postEditContest(contestID: Int, cid: Int)

GET /admin/:contestID/startImportTeams/:school controllers.AdminApplication.showImportedTeamList(contestID: Int, school:Boolean)

POST /admin/:contestID/importTeams/:school controllers.AdminApplication.importTeams(contestID: Int, school:Boolean)

POST /admin/mega/importComputers controllers.AdminApplication.importNetmapComputers

GET /admin/:contestID/misc controllers.AdminApplication.miscForms(contestID: Int)

GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

